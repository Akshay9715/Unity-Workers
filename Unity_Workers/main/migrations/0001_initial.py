# Generated by Django 5.1.2 on 2024-11-06 14:27

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='images/card')),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_work', models.DateField(blank=True, null=True)),
                ('type_of_work', models.TextField(blank=True, null=True)),
                ('work_location_link', models.URLField(blank=True, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worker_number',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_number', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='WorkerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='WorkRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_work', models.DateField(blank=True, null=True)),
                ('number_workers_required', models.IntegerField(blank=True, null=True)),
                ('work_location_link', models.URLField(blank=True, null=True)),
                ('worker_type', models.CharField(blank=True, choices=[('electrician', 'Electrician'), ('painter', 'Painter'), ('plumber', 'Plumber'), ('majdur', 'Majdur'), ('rajgeer', 'Rajgeer'), ('other', 'Other')], max_length=20, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkerRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('photo', models.ImageField(upload_to='photos/')),
                ('full_address', models.TextField(blank=True, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('tehsil', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6)),
                ('bank_branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=11, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_passbook_pdf', models.FileField(blank=True, null=True, upload_to='bank_passbooks/')),
                ('aadhar_number', models.CharField(max_length=12)),
                ('aadhar_card_pdf', models.FileField(blank=True, null=True, upload_to='aadhar_cards/')),
                ('marital_status', models.CharField(choices=[('Married', 'Married'), ('Unmarried', 'Unmarried'), ('Widow', 'Widow')], max_length=9)),
                ('education_qualification', models.CharField(blank=True, max_length=100, null=True)),
                ('work_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('worker_type', models.ManyToManyField(to='main.workertype')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
